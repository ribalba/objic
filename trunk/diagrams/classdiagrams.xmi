<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2009-04-29T18:40:53" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.5.3</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" xmi.id="m1" isAbstract="false" name="UML Model" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="28975" isRoot="false" isAbstract="false" name="constructor" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="28976" isRoot="false" isAbstract="false" name="friend" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="28977" isRoot="false" isAbstract="false" name="virtual" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2" isRoot="false" isAbstract="false" name="ExprLexer" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="4" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="7" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32779" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="11" value="" type="8" name="input" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="12" isRoot="false" isAbstract="false" isQuery="false" name="mT__30" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32780" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14" isRoot="false" isAbstract="false" isQuery="false" name="mT__31" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32781" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="15" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16" isRoot="false" isAbstract="false" isQuery="false" name="mT__32" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32782" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="18" isRoot="false" isAbstract="false" isQuery="false" name="mT__33" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32783" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="19" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20" isRoot="false" isAbstract="false" isQuery="false" name="mT__34" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32784" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="22" isRoot="false" isAbstract="false" isQuery="false" name="mT__35" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32785" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="23" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="24" isRoot="false" isAbstract="false" isQuery="false" name="mT__36" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32786" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="25" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="26" isRoot="false" isAbstract="false" isQuery="false" name="mT__37" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32787" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="27" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28" isRoot="false" isAbstract="false" isQuery="false" name="mT__38" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32788" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="29" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="30" isRoot="false" isAbstract="false" isQuery="false" name="mT__39" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32789" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="31" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="32" isRoot="false" isAbstract="false" isQuery="false" name="mT__40" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32790" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="33" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="34" isRoot="false" isAbstract="false" isQuery="false" name="mT__41" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32791" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="35" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="36" isRoot="false" isAbstract="false" isQuery="false" name="mT__42" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32792" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="37" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="38" isRoot="false" isAbstract="false" isQuery="false" name="mT__43" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32793" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="39" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="40" isRoot="false" isAbstract="false" isQuery="false" name="mT__44" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32794" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="42" isRoot="false" isAbstract="false" isQuery="false" name="mT__45" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32795" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="44" isRoot="false" isAbstract="false" isQuery="false" name="mT__46" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32796" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="45" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="46" isRoot="false" isAbstract="false" isQuery="false" name="mT__47" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32797" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="47" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="48" isRoot="false" isAbstract="false" isQuery="false" name="mT__48" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32798" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="49" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="50" isRoot="false" isAbstract="false" isQuery="false" name="mT__49" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32799" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="51" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="52" isRoot="false" isAbstract="false" isQuery="false" name="mT__50" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32800" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="53" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="54" isRoot="false" isAbstract="false" isQuery="false" name="mT__51" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32801" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="55" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="56" isRoot="false" isAbstract="false" isQuery="false" name="mT__52" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32802" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="57" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="58" isRoot="false" isAbstract="false" isQuery="false" name="mT__53" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32803" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="59" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="60" isRoot="false" isAbstract="false" isQuery="false" name="mT__54" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32804" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="61" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="62" isRoot="false" isAbstract="false" isQuery="false" name="mINT" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32805" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="63" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="64" isRoot="false" isAbstract="false" isQuery="false" name="mNAME" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32806" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="65" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="66" isRoot="false" isAbstract="false" isQuery="false" name="mSTRINGTPL" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32807" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="67" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="68" isRoot="false" isAbstract="false" isQuery="false" name="mNEWLINE" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32808" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="69" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="70" isRoot="false" isAbstract="false" isQuery="false" name="mCOMMENT" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32809" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="71" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="72" isRoot="false" isAbstract="false" isQuery="false" name="mLINE_COMMENT" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32810" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="73" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="74" isRoot="false" isAbstract="false" isQuery="false" name="mWS" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32811" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="75" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="76" isRoot="false" isAbstract="false" isQuery="false" name="mTokens" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32812" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="77" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3" isRoot="false" isAbstract="false" name="Lexer" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8" isRoot="false" isAbstract="false" name="string" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="10" isRoot="false" isAbstract="false" name="int" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="78" isRoot="false" isAbstract="false" name="ExprParser" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="80" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="83" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32813" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="84" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="85" value="" type="8" name="input" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="86" value="" type="8" name="state" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="87" isRoot="false" isAbstract="false" isQuery="false" name="getTreeAdaptor" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32814" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="88" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="89" isRoot="false" isAbstract="false" isQuery="false" name="setTreeAdaptor" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32815" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="90" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="91" value="" type="8" name="adaptor" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="99" isRoot="false" isAbstract="false" isQuery="false" name="prog" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32816" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="100" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="107" isRoot="false" isAbstract="false" isQuery="false" name="classdef" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32817" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="108" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="115" isRoot="false" isAbstract="false" isQuery="false" name="block" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32818" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="116" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="123" isRoot="false" isAbstract="false" isQuery="false" name="stat" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32819" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="124" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="131" isRoot="false" isAbstract="false" isQuery="false" name="returnstm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32820" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="132" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="139" isRoot="false" isAbstract="false" isQuery="false" name="methdef" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32821" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="140" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="147" isRoot="false" isAbstract="false" isQuery="false" name="call" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32822" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="148" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="155" isRoot="false" isAbstract="false" isQuery="false" name="printstm" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32823" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="156" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="163" isRoot="false" isAbstract="false" isQuery="false" name="printparams" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32824" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="164" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="171" isRoot="false" isAbstract="false" isQuery="false" name="whileloop" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32825" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="172" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="179" isRoot="false" isAbstract="false" isQuery="false" name="loopbreak" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32826" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="180" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="187" isRoot="false" isAbstract="false" isQuery="false" name="iftest" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32827" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="188" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="195" isRoot="false" isAbstract="false" isQuery="false" name="newvar" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32828" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="196" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="203" isRoot="false" isAbstract="false" isQuery="false" name="forloop" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32829" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="204" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="211" isRoot="false" isAbstract="false" isQuery="false" name="boolexp" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32830" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="212" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="219" isRoot="false" isAbstract="false" isQuery="false" name="cmp_operator" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32831" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="220" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="227" isRoot="false" isAbstract="false" isQuery="false" name="booltype" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32832" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="228" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="235" isRoot="false" isAbstract="false" isQuery="false" name="paramlist" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32833" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="236" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="243" isRoot="false" isAbstract="false" isQuery="false" name="servername" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32834" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="244" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="251" isRoot="false" isAbstract="false" isQuery="false" name="atom" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32835" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="252" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="92" isRoot="false" isAbstract="false" name="prog_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="97" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32836" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="98" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="101" isRoot="false" isAbstract="false" name="classdef_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="105" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32837" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="106" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="109" isRoot="false" isAbstract="false" name="block_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="113" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32838" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="114" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="117" isRoot="false" isAbstract="false" name="stat_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="121" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32839" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="122" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="125" isRoot="false" isAbstract="false" name="returnstm_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="129" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32840" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="130" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="133" isRoot="false" isAbstract="false" name="methdef_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="137" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32841" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="138" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="141" isRoot="false" isAbstract="false" name="call_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="145" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32842" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="146" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="149" isRoot="false" isAbstract="false" name="printstm_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="153" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32843" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="154" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="157" isRoot="false" isAbstract="false" name="printparams_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="161" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32844" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="162" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="165" isRoot="false" isAbstract="false" name="whileloop_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="169" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32845" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="170" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="173" isRoot="false" isAbstract="false" name="loopbreak_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="177" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32846" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="178" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="181" isRoot="false" isAbstract="false" name="iftest_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="185" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32847" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="186" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="189" isRoot="false" isAbstract="false" name="newvar_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="193" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32848" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="194" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="197" isRoot="false" isAbstract="false" name="forloop_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="201" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32849" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="202" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="205" isRoot="false" isAbstract="false" name="boolexp_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="209" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32850" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="210" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="213" isRoot="false" isAbstract="false" name="cmp_operator_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="217" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32851" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="218" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="221" isRoot="false" isAbstract="false" name="booltype_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="225" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32852" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="226" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="229" isRoot="false" isAbstract="false" name="paramlist_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="233" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32853" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="234" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="237" isRoot="false" isAbstract="false" name="servername_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="241" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32854" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="242" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="78" xmi.id="245" isRoot="false" isAbstract="false" name="atom_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="249" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32855" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="250" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="79" isRoot="false" isAbstract="false" name="Parser" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="93" isRoot="false" isAbstract="false" name="ParserRuleReturnScope" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="253" isRoot="false" isAbstract="false" name="Interpreter" >
     <UML:Classifier.feature>
      <UML:Operation comment="self.__parseTree = nodesToAdd" isSpecification="false" isLeaf="false" visibility="public" xmi.id="254" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32856" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="255" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="256" isRoot="false" isAbstract="false" isQuery="false" name="setName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32857" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="257" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="258" value="" type="8" name="vmDesc" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="259" isRoot="false" isAbstract="false" isQuery="false" name="getName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32858" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="260" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="261" isRoot="false" isAbstract="false" isQuery="false" name="pathToMe" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32859" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="262" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="263" isRoot="false" isAbstract="false" isQuery="false" name="getNode" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32860" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="264" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="265" isRoot="false" isAbstract="false" isQuery="false" name="getNextNode" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32861" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="266" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="267" isRoot="false" isAbstract="false" isQuery="false" name="hasNextNode" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32862" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="268" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="269" isRoot="false" isAbstract="false" isQuery="false" name="printTree" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32863" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="270" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="271" isRoot="false" isAbstract="false" isQuery="false" name="checkIfNextIsDown" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32864" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="272" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="273" isRoot="false" isAbstract="false" isQuery="false" name="checkIfNextIsUp" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32865" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="274" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="275" isRoot="false" isAbstract="false" isQuery="false" name="findBlockbounds" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32866" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="276" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="277" isRoot="false" isAbstract="false" isQuery="false" name="getParameters" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32867" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="278" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="279" isRoot="false" isAbstract="false" isQuery="false" name="resovelCallTree" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32868" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="280" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="281" isRoot="false" isAbstract="false" isQuery="false" name="checkBool" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32869" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="282" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="283" value="" type="8" name="startpos" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="284" value="" type="8" name="endpos" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="285" isRoot="false" isAbstract="false" isQuery="false" name="callMethodWrapper" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32870" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="286" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="287" value="" type="8" name="varName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="288" value="" type="8" name="method" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="289" value="" type="8" name="parameterStr" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="290" isRoot="false" isAbstract="false" isQuery="false" name="printRange" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32871" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="291" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="292" value="" type="8" name="a" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="293" value="" type="8" name="b" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="294" isRoot="false" isAbstract="false" isQuery="false" name="handleCall" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32872" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="295" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="296" isRoot="false" isAbstract="false" isQuery="false" name="parseBlock" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32873" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="297" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="298" value="" type="8" name="startposition" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="299" value="" type="8" name="stopposition" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="300" isRoot="false" isAbstract="false" isQuery="false" name="callFunction" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32874" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="301" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="302" value="" type="8" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="303" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="304" isRoot="false" isAbstract="false" isQuery="false" name="run" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32875" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="305" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="306" value="" type="8" name="className" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="307" isRoot="false" isAbstract="false" name="MethObject" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="309" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="312" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32876" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="313" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="314" value="" type="8" name="conString" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="315" value="" type="8" name="methodToCall" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="316" value="" type="8" name="parameters" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="308" isRoot="false" isAbstract="false" name="ObjConnection" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="317" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32877" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="318" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="319" value="" type="8" name="whereTo" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="320" isRoot="false" isAbstract="false" isQuery="false" name="connect" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32878" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="321" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="322" value="" type="8" name="ip" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="323" value="" type="8" name="port" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="324" isRoot="false" isAbstract="false" isQuery="false" name="sendMsg" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32879" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="325" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="326" value="" type="8" name="message" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="327" isRoot="false" isAbstract="false" isQuery="false" name="close" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32880" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="328" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="329" isRoot="false" isAbstract="false" isQuery="false" name="ptr" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32881" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="330" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="331" isRoot="false" isAbstract="false" isQuery="false" name="setPtr" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32882" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="332" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="333" value="" type="8" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="334" isRoot="false" isAbstract="false" isQuery="false" name="callMethod" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32883" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="335" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="336" value="" type="8" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="337" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="338" isRoot="false" isAbstract="false" name="ObjlocLexer" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="339" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="342" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32884" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="343" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="344" value="" type="8" name="input" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="345" isRoot="false" isAbstract="false" isQuery="false" name="mT__11" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32885" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="346" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="347" isRoot="false" isAbstract="false" isQuery="false" name="mINT" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32886" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="348" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="349" isRoot="false" isAbstract="false" isQuery="false" name="mNAME" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32887" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="350" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="351" isRoot="false" isAbstract="false" isQuery="false" name="mNEWLINE" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32888" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="352" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="353" isRoot="false" isAbstract="false" isQuery="false" name="mCOMMENT" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32889" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="354" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="355" isRoot="false" isAbstract="false" isQuery="false" name="mLINE_COMMENT" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32890" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="356" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="357" isRoot="false" isAbstract="false" isQuery="false" name="mWS" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32891" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="358" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="359" isRoot="false" isAbstract="false" isQuery="false" name="mTokens" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32892" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="360" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="361" isRoot="false" isAbstract="false" name="ObjlocParser" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="362" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="365" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32893" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="366" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="367" value="" type="8" name="input" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="368" value="" type="8" name="state" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="369" isRoot="false" isAbstract="false" isQuery="false" name="getTreeAdaptor" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32894" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="370" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="371" isRoot="false" isAbstract="false" isQuery="false" name="setTreeAdaptor" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32895" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="372" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="373" value="" type="8" name="adaptor" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="380" isRoot="false" isAbstract="false" isQuery="false" name="file" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32896" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="381" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="388" isRoot="false" isAbstract="false" isQuery="false" name="defin" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32897" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="389" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="361" xmi.id="374" isRoot="false" isAbstract="false" name="file_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="378" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32898" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="379" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="361" xmi.id="382" isRoot="false" isAbstract="false" name="defin_return" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="386" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="32899" type="8" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="387" value="" type="8" name="self" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="390" isRoot="false" isAbstract="false" name="ObjManager" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="391" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32900" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="392" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="393" isRoot="false" isAbstract="false" isQuery="false" name="newObj" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32901" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="394" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="395" value="" type="8" name="typeOfObj" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="396" value="" type="8" name="params" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="397" value="" type="8" name="serverRequest" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="398" isRoot="false" isAbstract="false" name="globalServer" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="399" isRoot="false" isAbstract="false" name="shutMeDown" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="400" isRoot="false" isAbstract="false" name="RequestHandler" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="403" />
      <UML:Generalization xmi.idref="15563" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation comment="Init" isSpecification="false" isLeaf="false" visibility="public" xmi.id="406" isRoot="false" isAbstract="false" isQuery="false" name="setup" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32902" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="407" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="408" isRoot="false" isAbstract="false" isQuery="false" name="handle" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32903" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="409" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="410" isRoot="false" isAbstract="false" isQuery="false" name="cleanUp" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32904" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="411" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="412" isRoot="false" isAbstract="false" isQuery="false" name="__repr__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32905" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="413" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="401" isRoot="false" isAbstract="false" name="SocketServer" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="401" xmi.id="402" isRoot="false" isAbstract="false" name="BaseRequestHandler" />
     </UML:Namespace.ownedElement>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="414" isRoot="false" isAbstract="false" name="Initializer" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="415" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32906" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="416" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="417" isRoot="false" isAbstract="false" isQuery="false" name="getServer" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32907" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="418" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="419" isRoot="false" isAbstract="false" isQuery="false" name="start_server" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32908" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="420" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="421" isRoot="false" isAbstract="false" isQuery="false" name="__del__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32909" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="422" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="423" isRoot="false" isAbstract="false" name="oClass" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="424" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32910" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="425" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="426" isRoot="false" isAbstract="false" isQuery="false" name="setName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32911" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="427" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="428" value="" type="8" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="429" isRoot="false" isAbstract="false" isQuery="false" name="getName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32912" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="430" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="431" isRoot="false" isAbstract="false" isQuery="false" name="raiseStack" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32913" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="432" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="433" isRoot="false" isAbstract="false" isQuery="false" name="popStack" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32914" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="434" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="435" isRoot="false" isAbstract="false" isQuery="false" name="dump_stack" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32915" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="436" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="437" isRoot="false" isAbstract="false" isQuery="false" name="addMethod" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32916" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="438" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="439" value="" type="8" name="methodName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="440" value="" type="8" name="start" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="441" value="" type="8" name="end" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="442" isRoot="false" isAbstract="false" isQuery="false" name="getMethod" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32917" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="443" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="444" value="" type="8" name="methodName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="445" isRoot="false" isAbstract="false" isQuery="false" name="addVar" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32918" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="446" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="447" value="" type="8" name="varName" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="448" value="" type="8" name="objectToPointTo" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="449" isRoot="false" isAbstract="false" isQuery="false" name="priGetVar" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32919" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="450" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="451" value="" type="8" name="varName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="452" isRoot="false" isAbstract="false" isQuery="false" name="getVar" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32920" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="453" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="454" value="" type="8" name="varName" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="455" isRoot="false" isAbstract="false" isQuery="false" name="__del__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32921" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="456" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="457" isRoot="false" isAbstract="false" isQuery="false" name="cleanStackLevel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32922" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="458" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="459" isRoot="false" isAbstract="false" isQuery="false" name="__str__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32923" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="460" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="461" isRoot="false" isAbstract="false" name="oInt" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="463" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="466" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32924" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="467" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="468" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="469" isRoot="false" isAbstract="false" isQuery="false" name="fadd" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32925" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="470" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="471" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="472" isRoot="false" isAbstract="false" isQuery="false" name="fmul" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32926" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="473" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="474" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="475" isRoot="false" isAbstract="false" isQuery="false" name="fmin" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32927" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="476" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="477" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="478" isRoot="false" isAbstract="false" isQuery="false" name="fvalue" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32928" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="479" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="480" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="481" isRoot="false" isAbstract="false" isQuery="false" name="frep" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32929" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="482" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="483" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="462" isRoot="false" isAbstract="false" name="oObject" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="484" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32930" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="485" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="486" isRoot="false" isAbstract="false" isQuery="false" name="cheanVal" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32931" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="487" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="488" value="" type="8" name="strVal" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="CHANGE to string" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="489" isRoot="false" isAbstract="false" name="oString" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="490" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="493" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32932" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="494" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="495" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="496" isRoot="false" isAbstract="false" isQuery="false" name="fadd" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32933" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="497" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="498" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="499" isRoot="false" isAbstract="false" isQuery="false" name="fvalue" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32934" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="500" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="501" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="502" isRoot="false" isAbstract="false" isQuery="false" name="frep" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32935" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="503" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="504" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="505" isRoot="false" isAbstract="false" name="oVm" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="506" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32936" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="507" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="508" value="" type="8" name="objType" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="509" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="510" isRoot="false" isAbstract="false" isQuery="false" name="call" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32937" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="511" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="512" value="" type="8" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="513" value="" type="8" name="params" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="514" isRoot="false" isAbstract="false" isQuery="false" name="constructor" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32938" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="515" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="516" isRoot="false" isAbstract="false" isQuery="false" name="getName" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32939" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="517" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="518" isRoot="false" isAbstract="false" isQuery="false" name="__repr__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32940" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="519" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="520" isRoot="false" isAbstract="false" name="Tree" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="522" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="525" isRoot="false" isAbstract="false" isQuery="false" name="__init__" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32941" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="526" value="" type="8" name="self" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="527" value="" type="8" name="input" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="528" value="" type="8" name="state" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="529" isRoot="false" isAbstract="false" isQuery="false" name="prog" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32942" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="530" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="531" isRoot="false" isAbstract="false" isQuery="false" name="block" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="32943" type="8" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="532" value="" type="8" name="self" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="521" isRoot="false" isAbstract="false" name="TreeParser" />
    <UML:Generalization isSpecification="false" child="2" visibility="public" namespace="m1" xmi.id="4" parent="3" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="78" visibility="public" namespace="m1" xmi.id="80" parent="79" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="92" visibility="public" namespace="m1" xmi.id="94" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="101" visibility="public" namespace="m1" xmi.id="102" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="109" visibility="public" namespace="m1" xmi.id="110" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="117" visibility="public" namespace="m1" xmi.id="118" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="125" visibility="public" namespace="m1" xmi.id="126" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="133" visibility="public" namespace="m1" xmi.id="134" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="141" visibility="public" namespace="m1" xmi.id="142" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="149" visibility="public" namespace="m1" xmi.id="150" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="157" visibility="public" namespace="m1" xmi.id="158" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="165" visibility="public" namespace="m1" xmi.id="166" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="173" visibility="public" namespace="m1" xmi.id="174" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="181" visibility="public" namespace="m1" xmi.id="182" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="189" visibility="public" namespace="m1" xmi.id="190" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="197" visibility="public" namespace="m1" xmi.id="198" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="205" visibility="public" namespace="m1" xmi.id="206" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="213" visibility="public" namespace="m1" xmi.id="214" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="221" visibility="public" namespace="m1" xmi.id="222" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="229" visibility="public" namespace="m1" xmi.id="230" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="237" visibility="public" namespace="m1" xmi.id="238" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="245" visibility="public" namespace="m1" xmi.id="246" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="307" visibility="public" namespace="m1" xmi.id="309" parent="308" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="338" visibility="public" namespace="m1" xmi.id="339" parent="3" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="361" visibility="public" namespace="m1" xmi.id="362" parent="79" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="374" visibility="public" namespace="m1" xmi.id="375" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="382" visibility="public" namespace="m1" xmi.id="383" parent="93" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="400" visibility="public" namespace="m1" xmi.id="403" parent="402" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="461" visibility="public" namespace="m1" xmi.id="463" parent="462" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="489" visibility="public" namespace="m1" xmi.id="490" parent="462" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="520" visibility="public" namespace="m1" xmi.id="522" parent="521" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="400" visibility="public" namespace="m1" xmi.id="15563" parent="402" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="16737" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="16738" aggregation="composite" type="414" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="16739" aggregation="none" type="505" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="17400" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="17401" aggregation="composite" type="414" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="17402" aggregation="none" type="400" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="17733" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="17734" aggregation="composite" type="400" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="17735" aggregation="none" type="505" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="18396" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="18397" aggregation="composite" type="505" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="18398" aggregation="none" type="253" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="18729" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="18730" aggregation="composite" type="253" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="18731" aggregation="none" type="390" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="22362" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="22363" aggregation="composite" type="414" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="22364" aggregation="none" type="400" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="22860" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="22861" aggregation="composite" type="505" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="22862" aggregation="none" type="253" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="23358" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="23359" aggregation="composite" type="253" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="23360" aggregation="none" type="390" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="23856" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="23857" aggregation="aggregate" type="414" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="23858" aggregation="none" type="400" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="29638" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="29639" aggregation="aggregate" type="253" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="29640" aggregation="none" type="423" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="30136" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="30137" aggregation="composite" type="253" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="30138" aggregation="none" type="423" name="" />
     </UML:Association.connection>
    </UML:Association>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="14242" documentation="" uniqueid="32943" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="1" documentation="" type="402" showops="1" showpackage="0" name="initializer" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="207" showattsigs="601" usesdiagramusefillcolour="1" x="38" y="50" showopsigs="601" linewidth="none" fillcolour="none" height="99" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="414" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="4658" documentation="" type="402" showops="1" showpackage="0" name="Interpreter" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="573" showattsigs="601" usesdiagramusefillcolour="1" x="26" y="36" showopsigs="601" linewidth="none" fillcolour="none" height="387" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="253" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="5319" documentation="" type="402" showops="1" showpackage="0" name="methobj" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="537" showattsigs="601" usesdiagramusefillcolour="1" x="20" y="22" showopsigs="601" linewidth="none" fillcolour="none" height="45" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="307" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="5980" documentation="" type="402" showops="1" showpackage="0" name="ObjConnection" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="380" showattsigs="601" usesdiagramusefillcolour="1" x="18" y="18" showopsigs="601" linewidth="none" fillcolour="none" height="153" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="308" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="6641" documentation="" type="402" showops="1" showpackage="0" name="ObjManager" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="513" showattsigs="601" usesdiagramusefillcolour="1" x="19" y="22" showopsigs="601" linewidth="none" fillcolour="none" height="63" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="390" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="7467" documentation="" type="402" showops="1" showpackage="0" name="RequestHandler" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="191" showattsigs="601" usesdiagramusefillcolour="1" x="10" y="19" showopsigs="601" linewidth="none" fillcolour="none" height="99" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="400" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="8128" documentation="" type="402" showops="1" showpackage="0" name="SocketServer" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="90" showattsigs="601" usesdiagramusefillcolour="1" x="17" y="13" showopsigs="601" linewidth="none" fillcolour="none" height="36" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="401" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="8789" documentation="" type="402" showops="1" showpackage="0" name="globalServer" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="87" showattsigs="601" usesdiagramusefillcolour="1" x="16" y="23" showopsigs="601" linewidth="none" fillcolour="none" height="36" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="398" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="10606" documentation="" type="402" showops="1" showpackage="0" name="oClass" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="480" showattsigs="601" usesdiagramusefillcolour="1" x="10" y="5" showopsigs="601" linewidth="none" fillcolour="none" height="279" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="423" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="11267" documentation="" type="402" showops="1" showpackage="0" name="oInt" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="279" showattsigs="601" usesdiagramusefillcolour="1" x="14" y="5" showopsigs="601" linewidth="none" fillcolour="none" height="135" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="461" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="11928" documentation="" type="402" showops="1" showpackage="0" name="oObject" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="278" showattsigs="601" usesdiagramusefillcolour="1" x="21" y="13" showopsigs="601" linewidth="none" fillcolour="none" height="63" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="462" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="12589" documentation="" type="402" showops="1" showpackage="0" name="oString" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="279" showattsigs="601" usesdiagramusefillcolour="1" x="15" y="11" showopsigs="601" linewidth="none" fillcolour="none" height="99" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="489" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1018" snapy="10" showatts="1" xmi.id="13250" documentation="" type="402" showops="1" showpackage="0" name="oVm" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="611" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="375" showattsigs="601" usesdiagramusefillcolour="1" x="5" y="8" showopsigs="601" linewidth="none" fillcolour="none" height="117" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="505" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="1" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="75" showgrid="1" showopsig="1" usefillcolor="0" snapx="10" canvaswidth="1337" snapy="10" showatts="1" xmi.id="14242" documentation="" type="402" showops="1" showpackage="0" name="serveroverview" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Charter,10,-1,5,50,0,0,0,0,0" linecolor="#000000" canvasheight="984" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="417" showattsigs="601" usesdiagramusefillcolour="0" x="112" y="702" showopsigs="601" linewidth="none" fillcolour="none" height="117" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="505" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,0,75,0,0,0,0,0" linecolor="#000000" />
     <classwidget usesdiagramfillcolour="1" width="648" showattsigs="601" usesdiagramusefillcolour="0" x="376" y="277" showopsigs="601" linewidth="none" fillcolour="none" height="387" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="253" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,0,75,0,0,0,0,0" linecolor="#000000" />
     <classwidget usesdiagramfillcolour="1" width="584" showattsigs="601" usesdiagramusefillcolour="0" x="408" y="179" showopsigs="601" linewidth="none" fillcolour="none" height="63" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="390" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,0,75,0,0,0,0,0" linecolor="#000000" />
     <classwidget usesdiagramfillcolour="1" width="235" showattsigs="601" usesdiagramusefillcolour="0" x="133" y="251" showopsigs="601" linewidth="none" fillcolour="none" height="99" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="414" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,0,75,0,0,0,0,0" linecolor="#000000" />
     <classwidget usesdiagramfillcolour="1" width="210" showattsigs="601" usesdiagramusefillcolour="0" x="145" y="451" showopsigs="601" linewidth="none" fillcolour="none" height="99" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="400" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,0,75,0,0,0,0,0" linecolor="#000000" />
     <classwidget usesdiagramfillcolour="1" width="480" showattsigs="601" usesdiagramusefillcolour="1" x="540" y="701" showopsigs="601" linewidth="none" fillcolour="none" height="279" usefillcolor="0" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="423" showoperations="1" showpackage="0" showscope="1" font="Bitstream Charter,10,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="505" widgetaid="400" xmi.id="17733" linecolor="#000000" >
      <linepath>
       <startpoint startx="250" starty="550" />
       <endpoint endx="250" endy="702" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" linewidth="none" widgetbid="253" widgetaid="505" xmi.id="22860" linecolor="none" >
      <linepath>
       <startpoint startx="390" starty="702" />
       <endpoint endx="590" endy="664" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="390" widgetaid="253" xmi.id="23358" linecolor="none" >
      <linepath>
       <startpoint startx="700" starty="277" />
       <endpoint endx="700" endy="242" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="400" widgetaid="414" xmi.id="23856" linecolor="none" >
      <linepath>
       <startpoint startx="250" starty="350" />
       <endpoint endx="250" endy="451" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" linewidth="none" widgetbid="423" widgetaid="253" xmi.id="30136" linecolor="none" >
      <linepath>
       <startpoint startx="810" starty="664" />
       <endpoint endx="780" endy="701" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Views" >
    <listitem open="1" type="801" label="Logical View" >
     <listitem open="0" type="813" id="2" >
      <listitem open="0" type="815" id="7" />
      <listitem open="0" type="815" id="12" />
      <listitem open="0" type="815" id="14" />
      <listitem open="0" type="815" id="16" />
      <listitem open="0" type="815" id="18" />
      <listitem open="0" type="815" id="20" />
      <listitem open="0" type="815" id="22" />
      <listitem open="0" type="815" id="24" />
      <listitem open="0" type="815" id="26" />
      <listitem open="0" type="815" id="28" />
      <listitem open="0" type="815" id="30" />
      <listitem open="0" type="815" id="32" />
      <listitem open="0" type="815" id="34" />
      <listitem open="0" type="815" id="36" />
      <listitem open="0" type="815" id="38" />
      <listitem open="0" type="815" id="40" />
      <listitem open="0" type="815" id="42" />
      <listitem open="0" type="815" id="44" />
      <listitem open="0" type="815" id="46" />
      <listitem open="0" type="815" id="48" />
      <listitem open="0" type="815" id="50" />
      <listitem open="0" type="815" id="52" />
      <listitem open="0" type="815" id="54" />
      <listitem open="0" type="815" id="56" />
      <listitem open="0" type="815" id="58" />
      <listitem open="0" type="815" id="60" />
      <listitem open="0" type="815" id="62" />
      <listitem open="0" type="815" id="64" />
      <listitem open="0" type="815" id="66" />
      <listitem open="0" type="815" id="68" />
      <listitem open="0" type="815" id="70" />
      <listitem open="0" type="815" id="72" />
      <listitem open="0" type="815" id="74" />
      <listitem open="0" type="815" id="76" />
     </listitem>
     <listitem open="0" type="813" id="78" >
      <listitem open="0" type="813" id="245" >
       <listitem open="0" type="815" id="249" />
      </listitem>
      <listitem open="0" type="813" id="109" >
       <listitem open="0" type="815" id="113" />
      </listitem>
      <listitem open="0" type="813" id="205" >
       <listitem open="0" type="815" id="209" />
      </listitem>
      <listitem open="0" type="813" id="221" >
       <listitem open="0" type="815" id="225" />
      </listitem>
      <listitem open="0" type="813" id="141" >
       <listitem open="0" type="815" id="145" />
      </listitem>
      <listitem open="0" type="813" id="101" >
       <listitem open="0" type="815" id="105" />
      </listitem>
      <listitem open="0" type="813" id="213" >
       <listitem open="0" type="815" id="217" />
      </listitem>
      <listitem open="0" type="813" id="197" >
       <listitem open="0" type="815" id="201" />
      </listitem>
      <listitem open="0" type="813" id="181" >
       <listitem open="0" type="815" id="185" />
      </listitem>
      <listitem open="0" type="813" id="173" >
       <listitem open="0" type="815" id="177" />
      </listitem>
      <listitem open="0" type="813" id="133" >
       <listitem open="0" type="815" id="137" />
      </listitem>
      <listitem open="0" type="813" id="189" >
       <listitem open="0" type="815" id="193" />
      </listitem>
      <listitem open="0" type="813" id="229" >
       <listitem open="0" type="815" id="233" />
      </listitem>
      <listitem open="0" type="813" id="157" >
       <listitem open="0" type="815" id="161" />
      </listitem>
      <listitem open="0" type="813" id="149" >
       <listitem open="0" type="815" id="153" />
      </listitem>
      <listitem open="0" type="813" id="92" >
       <listitem open="0" type="815" id="97" />
      </listitem>
      <listitem open="0" type="813" id="125" >
       <listitem open="0" type="815" id="129" />
      </listitem>
      <listitem open="0" type="813" id="237" >
       <listitem open="0" type="815" id="241" />
      </listitem>
      <listitem open="0" type="813" id="117" >
       <listitem open="0" type="815" id="121" />
      </listitem>
      <listitem open="0" type="813" id="165" >
       <listitem open="0" type="815" id="169" />
      </listitem>
      <listitem open="0" type="815" id="83" />
      <listitem open="0" type="815" id="87" />
      <listitem open="0" type="815" id="89" />
      <listitem open="0" type="815" id="99" />
      <listitem open="0" type="815" id="107" />
      <listitem open="0" type="815" id="115" />
      <listitem open="0" type="815" id="123" />
      <listitem open="0" type="815" id="131" />
      <listitem open="0" type="815" id="139" />
      <listitem open="0" type="815" id="147" />
      <listitem open="0" type="815" id="155" />
      <listitem open="0" type="815" id="163" />
      <listitem open="0" type="815" id="171" />
      <listitem open="0" type="815" id="179" />
      <listitem open="0" type="815" id="187" />
      <listitem open="0" type="815" id="195" />
      <listitem open="0" type="815" id="203" />
      <listitem open="0" type="815" id="211" />
      <listitem open="0" type="815" id="219" />
      <listitem open="0" type="815" id="227" />
      <listitem open="0" type="815" id="235" />
      <listitem open="0" type="815" id="243" />
      <listitem open="0" type="815" id="251" />
     </listitem>
     <listitem open="0" type="813" id="414" >
      <listitem open="0" type="815" id="415" />
      <listitem open="0" type="815" id="417" />
      <listitem open="0" type="815" id="419" />
      <listitem open="0" type="815" id="421" />
     </listitem>
     <listitem open="0" type="813" id="253" >
      <listitem open="0" type="815" id="254" />
      <listitem open="0" type="815" id="256" />
      <listitem open="0" type="815" id="259" />
      <listitem open="0" type="815" id="261" />
      <listitem open="0" type="815" id="263" />
      <listitem open="0" type="815" id="265" />
      <listitem open="0" type="815" id="267" />
      <listitem open="0" type="815" id="269" />
      <listitem open="0" type="815" id="271" />
      <listitem open="0" type="815" id="273" />
      <listitem open="0" type="815" id="275" />
      <listitem open="0" type="815" id="277" />
      <listitem open="0" type="815" id="279" />
      <listitem open="0" type="815" id="281" />
      <listitem open="0" type="815" id="285" />
      <listitem open="0" type="815" id="290" />
      <listitem open="0" type="815" id="294" />
      <listitem open="0" type="815" id="296" />
      <listitem open="0" type="815" id="300" />
      <listitem open="0" type="815" id="304" />
     </listitem>
     <listitem open="0" type="813" id="3" />
     <listitem open="0" type="813" id="307" >
      <listitem open="0" type="815" id="312" />
     </listitem>
     <listitem open="0" type="813" id="308" >
      <listitem open="0" type="815" id="317" />
      <listitem open="0" type="815" id="320" />
      <listitem open="0" type="815" id="324" />
      <listitem open="0" type="815" id="327" />
      <listitem open="0" type="815" id="329" />
      <listitem open="0" type="815" id="331" />
      <listitem open="0" type="815" id="334" />
     </listitem>
     <listitem open="0" type="813" id="390" >
      <listitem open="0" type="815" id="391" />
      <listitem open="0" type="815" id="393" />
     </listitem>
     <listitem open="0" type="813" id="338" >
      <listitem open="0" type="815" id="342" />
      <listitem open="0" type="815" id="345" />
      <listitem open="0" type="815" id="347" />
      <listitem open="0" type="815" id="349" />
      <listitem open="0" type="815" id="351" />
      <listitem open="0" type="815" id="353" />
      <listitem open="0" type="815" id="355" />
      <listitem open="0" type="815" id="357" />
      <listitem open="0" type="815" id="359" />
     </listitem>
     <listitem open="0" type="813" id="361" >
      <listitem open="0" type="813" id="382" >
       <listitem open="0" type="815" id="386" />
      </listitem>
      <listitem open="0" type="813" id="374" >
       <listitem open="0" type="815" id="378" />
      </listitem>
      <listitem open="0" type="815" id="365" />
      <listitem open="0" type="815" id="369" />
      <listitem open="0" type="815" id="371" />
      <listitem open="0" type="815" id="380" />
      <listitem open="0" type="815" id="388" />
     </listitem>
     <listitem open="0" type="813" id="79" />
     <listitem open="0" type="813" id="93" />
     <listitem open="0" type="813" id="400" >
      <listitem open="0" type="815" id="406" />
      <listitem open="0" type="815" id="408" />
      <listitem open="0" type="815" id="410" />
      <listitem open="0" type="815" id="412" />
     </listitem>
     <listitem open="0" type="813" id="401" >
      <listitem open="0" type="813" id="402" />
     </listitem>
     <listitem open="0" type="813" id="520" >
      <listitem open="0" type="815" id="525" />
      <listitem open="0" type="815" id="529" />
      <listitem open="0" type="815" id="531" />
     </listitem>
     <listitem open="0" type="813" id="521" />
     <listitem open="0" type="813" id="398" />
     <listitem open="0" type="813" id="10" />
     <listitem open="0" type="813" id="423" >
      <listitem open="0" type="815" id="424" />
      <listitem open="0" type="815" id="426" />
      <listitem open="0" type="815" id="429" />
      <listitem open="0" type="815" id="431" />
      <listitem open="0" type="815" id="433" />
      <listitem open="0" type="815" id="435" />
      <listitem open="0" type="815" id="437" />
      <listitem open="0" type="815" id="442" />
      <listitem open="0" type="815" id="445" />
      <listitem open="0" type="815" id="449" />
      <listitem open="0" type="815" id="452" />
      <listitem open="0" type="815" id="455" />
      <listitem open="0" type="815" id="457" />
      <listitem open="0" type="815" id="459" />
     </listitem>
     <listitem open="0" type="813" id="461" >
      <listitem open="0" type="815" id="466" />
      <listitem open="0" type="815" id="469" />
      <listitem open="0" type="815" id="472" />
      <listitem open="0" type="815" id="475" />
      <listitem open="0" type="815" id="478" />
      <listitem open="0" type="815" id="481" />
     </listitem>
     <listitem open="0" type="813" id="462" >
      <listitem open="0" type="815" id="484" />
      <listitem open="0" type="815" id="486" />
     </listitem>
     <listitem open="0" type="813" id="489" >
      <listitem open="0" type="815" id="493" />
      <listitem open="0" type="815" id="496" />
      <listitem open="0" type="815" id="499" />
      <listitem open="0" type="815" id="502" />
     </listitem>
     <listitem open="0" type="813" id="505" >
      <listitem open="0" type="815" id="506" />
      <listitem open="0" type="815" id="510" />
      <listitem open="0" type="815" id="514" />
      <listitem open="0" type="815" id="516" />
      <listitem open="0" type="815" id="518" />
     </listitem>
     <listitem open="0" type="813" id="399" />
     <listitem open="0" type="813" id="8" />
     <listitem open="0" type="830" label="Datatypes" />
    </listitem>
    <listitem open="1" type="802" label="Use Case View" />
    <listitem open="1" type="821" label="Component View" />
    <listitem open="1" type="827" label="Deployment View" />
    <listitem open="1" type="836" label="Entity Relationship Model" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++" >
    <classifiercodedocument writeOutCode="true" package="" id="2" parent_class="2" fileExt=".cpp" fileName="exprlexer" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;exprlexer.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="7" tag="operation_7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12" tag="operation_12" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14" tag="operation_14" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16" tag="operation_16" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="18" tag="operation_18" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20" tag="operation_20" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="22" tag="operation_22" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="24" tag="operation_24" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="26" tag="operation_26" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="28" tag="operation_28" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="30" tag="operation_30" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="32" tag="operation_32" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="34" tag="operation_34" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="36" tag="operation_36" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="38" tag="operation_38" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="40" tag="operation_40" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42" tag="operation_42" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="44" tag="operation_44" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46" tag="operation_46" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="48" tag="operation_48" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="50" tag="operation_50" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="52" tag="operation_52" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="54" tag="operation_54" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="56" tag="operation_56" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="58" tag="operation_58" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="60" tag="operation_60" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="62" tag="operation_62" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="64" tag="operation_64" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="66" tag="operation_66" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="68" tag="operation_68" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="70" tag="operation_70" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="72" tag="operation_72" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="74" tag="operation_74" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="76" tag="operation_76" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        exprlexer.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="3" parent_class="3" fileExt=".cpp" fileName="lexer" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;lexer.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        lexer.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="8" parent_class="8" fileExt=".cpp" fileName="string" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        string.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="10" parent_class="10" fileExt=".cpp" fileName="int" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;int.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        int.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="78" parent_class="78" fileExt=".cpp" fileName="exprparser" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;exprparser.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="83" tag="operation_83" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="87" tag="operation_87" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="89" tag="operation_89" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="99" tag="operation_99" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="107" tag="operation_107" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="115" tag="operation_115" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="123" tag="operation_123" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="131" tag="operation_131" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="139" tag="operation_139" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="147" tag="operation_147" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="155" tag="operation_155" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="163" tag="operation_163" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="171" tag="operation_171" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="179" tag="operation_179" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="187" tag="operation_187" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="195" tag="operation_195" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="203" tag="operation_203" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="211" tag="operation_211" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="219" tag="operation_219" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="227" tag="operation_227" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="235" tag="operation_235" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="243" tag="operation_243" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="251" tag="operation_251" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        exprparser.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="79" parent_class="79" fileExt=".cpp" fileName="parser" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;parser.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        parser.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="93" parent_class="93" fileExt=".cpp" fileName="parserrulereturnscope" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;parserrulereturnscope.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        parserrulereturnscope.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="253" parent_class="253" fileExt=".cpp" fileName="interpreter" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;interpreter.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="18396" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="18396" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="18396" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="18396" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="18396" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="18396" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="18396" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="18396" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="18396" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="18396" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="18729" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="18729" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="18729" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="18729" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="18729" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="18729" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="18729" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="18729" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="18729" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="18729" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="22860" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="22860" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="22860" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="22860" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="22860" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="22860" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="22860" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="22860" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="22860" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="22860" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="23358" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="23358" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="23358" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="23358" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="23358" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="23358" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="23358" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="23358" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="23358" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="23358" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="254" tag="operation_254" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="self.__parseTree = nodesToAdd" />
         </header>
        </codeoperation>
        <codeoperation parent_id="256" tag="operation_256" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="259" tag="operation_259" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="261" tag="operation_261" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="263" tag="operation_263" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="265" tag="operation_265" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="267" tag="operation_267" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="269" tag="operation_269" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="271" tag="operation_271" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="273" tag="operation_273" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="275" tag="operation_275" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="277" tag="operation_277" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="279" tag="operation_279" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="281" tag="operation_281" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="285" tag="operation_285" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="290" tag="operation_290" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="294" tag="operation_294" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="296" tag="operation_296" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="300" tag="operation_300" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="304" tag="operation_304" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="29638" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="29638" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29638" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="29638" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="29638" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="29638" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="29638" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="29638" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="29638" tag="hblock_tag_24" canDelete="false" writeOutText="false" classfield_id="29638" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="30136" tag="hblock_tag_25" canDelete="false" writeOutText="false" classfield_id="30136" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="30136" tag="hblock_tag_26" canDelete="false" writeOutText="false" classfield_id="30136" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="30136" tag="hblock_tag_27" canDelete="false" writeOutText="false" classfield_id="30136" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="30136" tag="hblock_tag_28" canDelete="false" writeOutText="false" classfield_id="30136" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="30136" tag="hblock_tag_29" canDelete="false" writeOutText="false" classfield_id="30136" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        interpreter.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:39:57&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="18396" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="18396" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="18396" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="18396" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="18396" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="18396" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="18396" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="18396" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="18396" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="18396" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="18396" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="18729" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="18729" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="18729" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="18729" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="18729" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="18729" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="18729" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="18729" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="18729" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="18729" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="18729" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="22860" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="22860" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="22860" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="22860" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="22860" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="22860" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="22860" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="22860" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="22860" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="22860" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="22860" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23358" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23358" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="23358" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23358" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="23358" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23358" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="23358" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23358" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="23358" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23358" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="23358" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29638" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29638" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="29638" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29638" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="29638" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="29638" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="29638" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="29638" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="29638" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="29638" tag="hblock_tag_24" canDelete="false" writeOutText="false" classfield_id="29638" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="30136" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30136" tag="hblock_tag_25" canDelete="false" writeOutText="false" classfield_id="30136" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30136" tag="hblock_tag_26" canDelete="false" writeOutText="false" classfield_id="30136" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="30136" tag="hblock_tag_27" canDelete="false" writeOutText="false" classfield_id="30136" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="30136" tag="hblock_tag_28" canDelete="false" writeOutText="false" classfield_id="30136" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="30136" tag="hblock_tag_29" canDelete="false" writeOutText="false" classfield_id="30136" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="307" parent_class="307" fileExt=".cpp" fileName="methobject" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;methobject.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="312" tag="operation_312" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        methobject.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="308" parent_class="308" fileExt=".cpp" fileName="objconnection" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;objconnection.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="317" tag="operation_317" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="320" tag="operation_320" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="324" tag="operation_324" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="327" tag="operation_327" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="329" tag="operation_329" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="331" tag="operation_331" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="334" tag="operation_334" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        objconnection.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="338" parent_class="338" fileExt=".cpp" fileName="objloclexer" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;objloclexer.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="342" tag="operation_342" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="345" tag="operation_345" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="347" tag="operation_347" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="349" tag="operation_349" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="351" tag="operation_351" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="353" tag="operation_353" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="355" tag="operation_355" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="357" tag="operation_357" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="359" tag="operation_359" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        objloclexer.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="361" parent_class="361" fileExt=".cpp" fileName="objlocparser" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;objlocparser.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="365" tag="operation_365" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="369" tag="operation_369" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="371" tag="operation_371" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="380" tag="operation_380" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="388" tag="operation_388" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        objlocparser.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="390" parent_class="390" fileExt=".cpp" fileName="objmanager" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;objmanager.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="18729" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="18729" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="18729" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="18729" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="18729" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="18729" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="18729" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="18729" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="18729" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="18729" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="23358" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="23358" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="23358" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="23358" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="23358" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="23358" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="23358" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="23358" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="23358" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="23358" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="391" tag="operation_391" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="393" tag="operation_393" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        objmanager.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:40:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="18729" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="18729" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="18729" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="18729" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="18729" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="18729" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="18729" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="18729" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="18729" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="18729" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="18729" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23358" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23358" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="23358" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23358" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="23358" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23358" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="23358" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23358" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="23358" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23358" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="23358" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="398" parent_class="398" fileExt=".cpp" fileName="globalserver" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;globalserver.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        globalserver.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="399" parent_class="399" fileExt=".cpp" fileName="shutmedown" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;shutmedown.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shutmedown.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="400" parent_class="400" fileExt=".cpp" fileName="requesthandler" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;requesthandler.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="23856" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="23856" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="23856" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="23856" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="23856" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="23856" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="23856" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="23856" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="23856" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="23856" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17400" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="17400" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17400" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="17400" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="17400" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="17400" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="17400" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="17400" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="17400" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="17400" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17733" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="17733" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17733" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="17733" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="17733" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="17733" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="17733" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="17733" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="17733" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="17733" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="22362" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="22362" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="22362" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="22362" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="22362" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="22362" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="22362" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="22362" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="22362" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="22362" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="406" tag="operation_406" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Init" />
         </header>
        </codeoperation>
        <codeoperation parent_id="408" tag="operation_408" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="410" tag="operation_410" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="412" tag="operation_412" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        requesthandler.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:40:40&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="23856" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23856" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="23856" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23856" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="23856" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23856" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="23856" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23856" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="23856" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23856" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="23856" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17400" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17400" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="17400" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17400" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="17400" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="17400" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="17400" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="17400" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="17400" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="17400" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="17400" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17733" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17733" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="17733" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17733" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="17733" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="17733" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="17733" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="17733" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="17733" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="17733" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="17733" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="22362" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="22362" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="22362" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="22362" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="22362" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="22362" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="22362" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="22362" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="22362" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="22362" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="22362" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="401" parent_class="401" fileExt=".cpp" fileName="socketserver" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;socketserver.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        socketserver.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="414" parent_class="414" fileExt=".cpp" fileName="initializer" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;initializer.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="23856" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="23856" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="23856" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="23856" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="23856" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="23856" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="23856" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="23856" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="23856" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="23856" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16737" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="16737" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16737" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="16737" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="16737" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="16737" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="16737" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="16737" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="16737" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="16737" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17400" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="17400" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17400" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="17400" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="17400" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="17400" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="17400" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="17400" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="17400" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="17400" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="22362" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="22362" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="22362" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="22362" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="22362" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="22362" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="22362" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="22362" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="22362" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="22362" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="415" tag="operation_415" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="417" tag="operation_417" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="419" tag="operation_419" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="421" tag="operation_421" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        initializer.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:40:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="23856" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23856" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="23856" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23856" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="23856" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23856" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="23856" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23856" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="23856" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23856" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="23856" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16737" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16737" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="16737" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16737" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="16737" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="16737" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="16737" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="16737" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="16737" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="16737" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="16737" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17400" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17400" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="17400" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17400" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="17400" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="17400" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="17400" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="17400" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="17400" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="17400" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="17400" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="22362" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="22362" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="22362" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="22362" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="22362" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="22362" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="22362" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="22362" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="22362" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="22362" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="22362" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="423" parent_class="423" fileExt=".cpp" fileName="oclass" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;oclass.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="424" tag="operation_424" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="426" tag="operation_426" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="429" tag="operation_429" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="431" tag="operation_431" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="433" tag="operation_433" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="435" tag="operation_435" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="437" tag="operation_437" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="442" tag="operation_442" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="445" tag="operation_445" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="449" tag="operation_449" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="452" tag="operation_452" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="455" tag="operation_455" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="457" tag="operation_457" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="459" tag="operation_459" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="29638" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="29638" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29638" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="29638" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="29638" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="29638" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="29638" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="29638" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="29638" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="29638" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="30136" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="30136" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="30136" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="30136" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="30136" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="30136" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="30136" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="30136" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="30136" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="30136" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        oclass.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:40:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29638" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29638" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="29638" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29638" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="29638" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="29638" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="29638" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="29638" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="29638" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="29638" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="29638" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="30136" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30136" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="30136" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30136" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="30136" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="30136" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="30136" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="30136" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="30136" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="30136" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="30136" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="461" parent_class="461" fileExt=".cpp" fileName="oint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;oint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="466" tag="operation_466" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="469" tag="operation_469" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="472" tag="operation_472" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="475" tag="operation_475" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="478" tag="operation_478" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="481" tag="operation_481" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        oint.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="462" parent_class="462" fileExt=".cpp" fileName="oobject" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;oobject.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="484" tag="operation_484" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="486" tag="operation_486" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        oobject.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="489" parent_class="489" fileExt=".cpp" fileName="ostring" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;ostring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="493" tag="operation_493" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="496" tag="operation_496" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="499" tag="operation_499" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="502" tag="operation_502" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ostring.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="505" parent_class="505" fileExt=".cpp" fileName="ovm" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;ovm.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="16737" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="16737" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16737" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="16737" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="16737" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="16737" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="16737" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="16737" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="16737" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="16737" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17733" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="17733" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17733" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="17733" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="17733" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="17733" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="17733" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="17733" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="17733" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="17733" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="18396" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="18396" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="18396" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="18396" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="18396" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="18396" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="18396" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="18396" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="18396" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="18396" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="22860" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="22860" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="22860" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="22860" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="22860" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="22860" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="22860" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="22860" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="22860" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="22860" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="506" tag="operation_506" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="510" tag="operation_510" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="514" tag="operation_514" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="516" tag="operation_516" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="518" tag="operation_518" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ovm.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:40:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16737" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16737" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="16737" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16737" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="16737" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="16737" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="16737" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="16737" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="16737" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="16737" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="16737" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17733" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17733" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="17733" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17733" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="17733" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="17733" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="17733" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="17733" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="17733" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="17733" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="17733" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="18396" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="18396" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="18396" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="18396" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="18396" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="18396" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="18396" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="18396" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="18396" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="18396" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="18396" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="22860" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="22860" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="22860" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="22860" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="22860" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="22860" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="22860" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="22860" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="22860" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="22860" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="22860" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="520" parent_class="520" fileExt=".cpp" fileName="tree" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;tree.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="525" tag="operation_525" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="529" tag="operation_529" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="531" tag="operation_531" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        tree.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="521" parent_class="521" fileExt=".cpp" fileName="treeparser" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;treeparser.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        treeparser.cpp - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader2" parent_class="2" fileExt=".h" fileName="exprlexer" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef EXPRLEXER_H&amp;#010;#define EXPRLEXER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="2" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ExprLexer&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ExprLexer ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="7" tag="operation_7" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param input " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="12" tag="operation_12" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="14" tag="operation_14" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16" tag="operation_16" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="18" tag="operation_18" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20" tag="operation_20" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="22" tag="operation_22" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="24" tag="operation_24" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="26" tag="operation_26" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="28" tag="operation_28" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="30" tag="operation_30" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="32" tag="operation_32" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="34" tag="operation_34" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="36" tag="operation_36" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="38" tag="operation_38" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="40" tag="operation_40" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="42" tag="operation_42" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="44" tag="operation_44" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="46" tag="operation_46" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="48" tag="operation_48" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="50" tag="operation_50" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="52" tag="operation_52" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="54" tag="operation_54" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="56" tag="operation_56" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="58" tag="operation_58" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="60" tag="operation_60" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="62" tag="operation_62" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="64" tag="operation_64" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="66" tag="operation_66" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="68" tag="operation_68" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="70" tag="operation_70" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="72" tag="operation_72" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="74" tag="operation_74" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="76" tag="operation_76" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //EXPRLEXER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        exprlexer.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader3" parent_class="3" fileExt=".h" fileName="lexer" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LEXER_H&amp;#010;#define LEXER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="3" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Lexer&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Lexer ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LEXER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        lexer.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader8" parent_class="8" fileExt=".h" fileName="string" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRING_H&amp;#010;#define STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="8" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class string&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="string ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        string.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader10" parent_class="10" fileExt=".h" fileName="int" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INT_H&amp;#010;#define INT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="10" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class int&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="int ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        int.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader78" parent_class="78" fileExt=".h" fileName="exprparser" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef EXPRPARSER_H&amp;#010;#define EXPRPARSER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="78" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ExprParser&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ExprParser ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="83" tag="operation_83" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param input &amp;#010;@param state " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="87" tag="operation_87" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="89" tag="operation_89" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param adaptor " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="99" tag="operation_99" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="107" tag="operation_107" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="115" tag="operation_115" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="123" tag="operation_123" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="131" tag="operation_131" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="139" tag="operation_139" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="147" tag="operation_147" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="155" tag="operation_155" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="163" tag="operation_163" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="171" tag="operation_171" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="179" tag="operation_179" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="187" tag="operation_187" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="195" tag="operation_195" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="203" tag="operation_203" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="211" tag="operation_211" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="219" tag="operation_219" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="227" tag="operation_227" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="235" tag="operation_235" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="243" tag="operation_243" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="251" tag="operation_251" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //EXPRPARSER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        exprparser.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader79" parent_class="79" fileExt=".h" fileName="parser" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef PARSER_H&amp;#010;#define PARSER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="79" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Parser&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Parser ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //PARSER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        parser.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader93" parent_class="93" fileExt=".h" fileName="parserrulereturnscope" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef PARSERRULERETURNSCOPE_H&amp;#010;#define PARSERRULERETURNSCOPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="93" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ParserRuleReturnScope&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ParserRuleReturnScope ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //PARSERRULERETURNSCOPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        parserrulereturnscope.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader253" parent_class="253" fileExt=".h" fileName="interpreter" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INTERPRETER_H&amp;#010;#define INTERPRETER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="253" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Interpreter&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Interpreter ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="254" tag="operation_254" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="self.__parseTree = nodesToAdd" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="256" tag="operation_256" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param vmDesc " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="259" tag="operation_259" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="261" tag="operation_261" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="263" tag="operation_263" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="265" tag="operation_265" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="267" tag="operation_267" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="269" tag="operation_269" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="271" tag="operation_271" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="273" tag="operation_273" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="275" tag="operation_275" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="277" tag="operation_277" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="279" tag="operation_279" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="281" tag="operation_281" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param startpos &amp;#010;@param endpos " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="285" tag="operation_285" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param varName &amp;#010;@param method &amp;#010;@param parameterStr " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="290" tag="operation_290" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param a &amp;#010;@param b " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="294" tag="operation_294" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="296" tag="operation_296" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param startposition &amp;#010;@param stopposition " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="300" tag="operation_300" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param name &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="304" tag="operation_304" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param className " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INTERPRETER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        interpreter.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:39:57&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="18396" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" oVm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18396" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18396" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18396" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18396" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18396" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="18729" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ObjManager ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18729" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18729" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18729" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18729" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18729" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="22860" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" oVm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22860" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22860" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22860" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22860" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22860" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23358" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ObjManager ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23358" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23358" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23358" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23358" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23358" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29638" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" oClass ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="29638" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="29638" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="29638" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="29638" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="29638" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="30136" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" oClass ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="30136" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="30136" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="30136" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="30136" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="30136" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader307" parent_class="307" fileExt=".h" fileName="methobject" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef METHOBJECT_H&amp;#010;#define METHOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="307" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class MethObject&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="MethObject ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="312" tag="operation_312" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param conString &amp;#010;@param methodToCall &amp;#010;@param parameters " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //METHOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        methobject.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader308" parent_class="308" fileExt=".h" fileName="objconnection" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OBJCONNECTION_H&amp;#010;#define OBJCONNECTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="308" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ObjConnection&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ObjConnection ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="317" tag="operation_317" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param whereTo " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="320" tag="operation_320" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param ip &amp;#010;@param port " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="324" tag="operation_324" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param message " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="327" tag="operation_327" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="329" tag="operation_329" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="331" tag="operation_331" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param name " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="334" tag="operation_334" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param name &amp;#010;@param params " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OBJCONNECTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        objconnection.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader338" parent_class="338" fileExt=".h" fileName="objloclexer" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OBJLOCLEXER_H&amp;#010;#define OBJLOCLEXER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="338" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ObjlocLexer&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ObjlocLexer ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="342" tag="operation_342" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param input " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="345" tag="operation_345" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="347" tag="operation_347" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="349" tag="operation_349" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="351" tag="operation_351" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="353" tag="operation_353" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="355" tag="operation_355" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="357" tag="operation_357" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="359" tag="operation_359" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OBJLOCLEXER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        objloclexer.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader361" parent_class="361" fileExt=".h" fileName="objlocparser" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OBJLOCPARSER_H&amp;#010;#define OBJLOCPARSER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="361" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ObjlocParser&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ObjlocParser ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="365" tag="operation_365" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param input &amp;#010;@param state " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="369" tag="operation_369" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="371" tag="operation_371" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param adaptor " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="380" tag="operation_380" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="388" tag="operation_388" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OBJLOCPARSER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        objlocparser.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader390" parent_class="390" fileExt=".h" fileName="objmanager" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OBJMANAGER_H&amp;#010;#define OBJMANAGER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="390" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ObjManager&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ObjManager ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="391" tag="operation_391" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="393" tag="operation_393" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param typeOfObj &amp;#010;@param params &amp;#010;@param serverRequest " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OBJMANAGER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        objmanager.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:40:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="18729" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Interpreter ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18729" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18729" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18729" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18729" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="18729" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18729" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23358" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Interpreter ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23358" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23358" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23358" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23358" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23358" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23358" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader398" parent_class="398" fileExt=".h" fileName="globalserver" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GLOBALSERVER_H&amp;#010;#define GLOBALSERVER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="398" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class globalServer&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="globalServer ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GLOBALSERVER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        globalserver.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader399" parent_class="399" fileExt=".h" fileName="shutmedown" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SHUTMEDOWN_H&amp;#010;#define SHUTMEDOWN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="399" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class shutMeDown&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="shutMeDown ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SHUTMEDOWN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        shutmedown.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader400" parent_class="400" fileExt=".h" fileName="requesthandler" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef REQUESTHANDLER_H&amp;#010;#define REQUESTHANDLER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using ::RequestHandler;&amp;#010;using ::RequestHandler;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="400" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class RequestHandler&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="RequestHandler ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="406" tag="operation_406" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Init" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="408" tag="operation_408" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="410" tag="operation_410" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="412" tag="operation_412" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //REQUESTHANDLER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        requesthandler.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:40:40&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="23856" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Initializer ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23856" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23856" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23856" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23856" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23856" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17400" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Initializer ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17400" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17400" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17400" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17400" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17400" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17733" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" oVm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17733" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17733" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17733" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17733" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17733" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="22362" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Initializer ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22362" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22362" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22362" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22362" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22362" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader401" parent_class="401" fileExt=".h" fileName="socketserver" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SOCKETSERVER_H&amp;#010;#define SOCKETSERVER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="401" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SocketServer&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SocketServer ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SOCKETSERVER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        socketserver.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader414" parent_class="414" fileExt=".h" fileName="initializer" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INITIALIZER_H&amp;#010;#define INITIALIZER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="414" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Initializer&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Initializer ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="415" tag="operation_415" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="417" tag="operation_417" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="419" tag="operation_419" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="421" tag="operation_421" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INITIALIZER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        initializer.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:40:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="23856" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" RequestHandler ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23856" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23856" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23856" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23856" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23856" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23856" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16737" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" oVm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="16737" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="16737" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="16737" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="16737" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="16737" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17400" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" RequestHandler ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17400" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17400" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17400" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17400" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="17400" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17400" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="22362" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" RequestHandler ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22362" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22362" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22362" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22362" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="22362" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22362" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader423" parent_class="423" fileExt=".h" fileName="oclass" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OCLASS_H&amp;#010;#define OCLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="423" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class oClass&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="oClass ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="424" tag="operation_424" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="426" tag="operation_426" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param name " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="429" tag="operation_429" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="431" tag="operation_431" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="433" tag="operation_433" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="435" tag="operation_435" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="437" tag="operation_437" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param methodName &amp;#010;@param start &amp;#010;@param end " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="442" tag="operation_442" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param methodName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="445" tag="operation_445" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param varName &amp;#010;@param objectToPointTo " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="449" tag="operation_449" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param varName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="452" tag="operation_452" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param varName " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="455" tag="operation_455" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="457" tag="operation_457" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="459" tag="operation_459" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OCLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        oclass.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:40:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29638" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Interpreter ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="29638" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="29638" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="29638" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="29638" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="29638" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="29638" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="30136" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Interpreter ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="30136" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="30136" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="30136" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="30136" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="30136" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="30136" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader461" parent_class="461" fileExt=".h" fileName="oint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OINT_H&amp;#010;#define OINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="461" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class oInt&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="oInt ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="466" tag="operation_466" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="469" tag="operation_469" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="472" tag="operation_472" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="475" tag="operation_475" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="478" tag="operation_478" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="481" tag="operation_481" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param params " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        oint.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader462" parent_class="462" fileExt=".h" fileName="oobject" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OOBJECT_H&amp;#010;#define OOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="462" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class oObject&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="oObject ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="484" tag="operation_484" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="486" tag="operation_486" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param strVal " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        oobject.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader489" parent_class="489" fileExt=".h" fileName="ostring" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OSTRING_H&amp;#010;#define OSTRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="489" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class oString&amp;#010;CHANGE to string" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="oString ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="493" tag="operation_493" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="496" tag="operation_496" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="499" tag="operation_499" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="502" tag="operation_502" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param params " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OSTRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ostring.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader505" parent_class="505" fileExt=".h" fileName="ovm" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OVM_H&amp;#010;#define OVM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="505" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class oVm&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="oVm ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="506" tag="operation_506" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param objType &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="510" tag="operation_510" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param name &amp;#010;@param params " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="514" tag="operation_514" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="516" tag="operation_516" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="518" tag="operation_518" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OVM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ovm.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:40:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16737" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Initializer ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="16737" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="16737" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="16737" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="16737" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="16737" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="16737" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17733" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" RequestHandler ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17733" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17733" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17733" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17733" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="17733" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="17733" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="18396" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Interpreter ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18396" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18396" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18396" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18396" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="18396" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="18396" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="22860" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Interpreter ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22860" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22860" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22860" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22860" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="22860" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="22860" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader520" parent_class="520" fileExt=".h" fileName="tree" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TREE_H&amp;#010;#define TREE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="520" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Tree&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Tree ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="525" tag="operation_525" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self &amp;#010;@param input &amp;#010;@param state " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="529" tag="operation_529" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="531" tag="operation_531" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param self " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TREE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        tree.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader521" parent_class="521" fileExt=".h" fileName="treeparser" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TREEPARSER_H&amp;#010;#define TREEPARSER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="521" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class TreeParser&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="TreeParser ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TREEPARSER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        treeparser.h - Copyright didi&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Apr 29 2009 at 18:38:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
